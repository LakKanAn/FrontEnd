name: deploy-non-prd
on:
  push:
    branches:
      - dev
      - main

jobs:
  code-testing:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

#       - name: Install modules
#         run: npm install

#       - name: Create .env file
#         run: 'echo "$FILE_CONTENT" >> .env'
#         shell: bash
#         env:
#           FILE_CONTENT : ${{ secrets.ENV_FILE_CONTENT }}

#       - name: Run Test
#         run: npm test --collectCoverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }}

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set env
        run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/main" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env file
        run: 'echo "$FILE_CONTENT" >> .env'
        shell: bash
        env:
          FILE_CONTENT : ${{ secrets.ENV_FILE_CONTENT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/lakkanan/frontend:${{ env.ENV_NAME }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/lakkanan/frontend:${{ env.ENV_NAME }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always() 
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set env
        run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/main" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
        
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker pull ghcr.io/lakkanan/frontend:${{ env.ENV_NAME }}
            export COMPOSE_IGNORE_ORPHANS=True
            docker-compose -f ~/docker-compose/${{ env.ENV_NAME }}/${{ env.ENV_NAME }}-app-compose.yml down
            docker-compose -f ~/docker-compose/${{ env.ENV_NAME }}/${{ env.ENV_NAME }}-app-compose.yml up -d

  acceptance-testing:
    needs: deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Set env
        run: echo "ENV_NAME=$( [ $GITHUB_REF == "refs/heads/master" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV
      - name: acceptance test
        run: curl https://${{ env.ENV_NAME }}.lakkanan.shop | grep "lakkanan - lakkanan" && echo $?

  security-testing:
    needs: deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set env
        run: echo "ENV_NAME=$( [ "$GITHUB_REF" == "refs/heads/main" ] && echo 'uat' || echo ${GITHUB_REF##*/} )" >> $GITHUB_ENV

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://${{ env.ENV_NAME }}.lakkanan.shop'
